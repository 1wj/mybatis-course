<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <!--指定properties文件的位置也叫引入外部配置文件， (target/class里面的)从类路径根开始找文件-->

    <properties resource="jdbc.properties" />

    <!--控制mybatis全局行为-->
    <settings>
        <!--设置mybatis输出日志-->
        <setting name="logImpl" value="STDOUT_LOGGING"/>
    </settings>

    <!--定义别名-->
    <typeAliases>
        <!--第一种方式.可以指定一个类型一个自定义别名
              type：自定义类型的全限定名称
              alias：别名（容易记忆的）
        -->
      <!--  <typeAlias type="cn.bj.domain.Student" alias="stu"  />
              <typeAlias type="cn.bj.vo.ViewStudent" alias="vstu" />
      -->

        <!--第二种方式
            <package> name是包名 ，这个包中的所有的类，类名就是别名（类目不区分大小写）
        -->
        <package name="cn.bj.domain"/>
        <package name="cn.bj.vo"/>
    </typeAliases>

<!--配置插件 位置是有讲究的 放的是一个过滤器-->
    <plugins>
        <plugin interceptor="com.github.pagehelper.PageInterceptor" />
    </plugins>


    <!--配置环境 带了s说明有多个 ： 数据库的连接信息
      default:必须和environment 的id的值一样
      告诉mybatis使用哪个数据库的连接信息，也就是访问哪个数据库-->
    <environments default="mm">

        <!--environment :一个数据库信息的配置 检查一个环境
            id: 一个唯一值，自定义的表示环境的名称
        -->
        <environment id="mm">
            <!--transactionManger (事务管理器):mybatis提交事务，回顾事务的方式
                1）JDBC表示mybatis底层调用JDBC中的Connection对象的commit,rollback做事务处理）
                2）MANAGED:把mybatis的事务处理委托给其他的容器（一个服务器软件，一个框架（spring））
            -->
            <transactionManager type="JDBC"/>
            <!--dataSource 表示数据源,在java体系中，规定实现了javax.sql.DataSource接口的都是数据源
                            数据源表示Connection对象的
                type : 表示数据源的类型，
                        1)POOLED: 表示使用连接池,mybatis会创建PoolDataSource类
                        2）UPOOLED: 不使用连接池， 在每次执行sql语句，先创建连接，执行sql，再关闭连接
                                    mybatis会创建一个UnPoolDataSource，管理Connection对象的使用
                        3）JNDI: 比较老了 叫 java命令和目录服务（windows注册表）
            -->
            <dataSource type="POOLED">
                <!--driver,url,username,password 是固定的，不能自定义
                -->
                <!--driver是数据库的驱动类名-->
                <property name="driver" value="${jdbc.driver}"/>
                <!--连接数据库的字符串-->
                <property name="url" value="${jdbc.url}"/>
                <!--?serverTimezone=UTC-->
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.passwd}"/>
            </dataSource>
        </environment>
    </environments>


    <!-- sql mapper (sql 映射文件) 的位置-->
    <mappers>
        <!--一个mapper 标签指定一个文件的位置
        可以有多个mapper标签
            从类路径开始的路径信息 target/class（类路径）
            有几个映射文件就的出现几次
        -->
        <!--第一种方式：挨个指定多个mapper文件 太累-->
            <!-- <mapper resource="cn/bj/dao/StudentDao.xml"/>-->
            <!-- <mapper resource="cn/bj/dao/OrderDao.xml"/>-->
        <!--第二种方式：使用包名
            name：是xml文件(mapper文件)所在的包名，这个包中的所有xml文件一次都能加载给mybatis
            使用package要求：
            1.mapper文件名称需要和接口名称一样，区分大小写的一样 （简称同名）
            2.mapper文件和dao接口文件要在同一个目录
        -->
             <package name="cn.bj.dao"/>
    </mappers>
</configuration>
