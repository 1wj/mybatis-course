<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.bj.dao.StudentDao">
    <!--
        resultType: 表示结果类型的，是sql语句执行后得到的ResultSet,遍历这个ResultSet得到的对象的类型
          值写的是类型的全限定名称
          或者别名例如java.lang.Integer 别名是int
           也就是接口中方法的返回值


     <select id="selectStudents"  resultType="cn.bj.domain.Student">
        select id,name,email,age from student order by id;
    </select>
    对等的jdbc
    ResultSet rs=executeQuery("select id,name,email,age from student")
    while(rs.next()){
        Student student=new Student()
        student.setId(rs.getInt("id"));
        student.setName(rs.getInt("Name"));

    }
    -->

    <!--resultType的使用  返回的是一个对象 可以自定义 -->
    <select id="selectViewStudent"  resultType="ViewStudent">
        select id,name,email,age from student where id=#{sid};
    </select>


    <!--resultType的使用   返回的是一个简单类型  java.lang.Integer 也可以用别名int -->
    <select id="selectResultType" resultType="int">
        select count(*) from student
    </select>

    <!--返回值是map
        1)列名是map的key,列值是map的value
        2）只能最多返回一行记录，超过一行是错误
    -->
    <select id="selectReturnMap" resultType="java.util.HashMap">
        select id,name,email,age from student where id=#{sid};
    </select>

    <!--resultMap: 结果映射，指定列名和java对象的属性对应关系
        1）你自定义数列给哪个属性
        2）当你的列名和属性名不一样时，一定使用resultMap
        使用方式：1） 先定义resultMap
                2)  在select标签，使用resultMap来应用定义的

                 id:自定义的名称，表示你定义的这个resultMap
                 type:java类型的全限定名称
    -->
    <resultMap id="studentMap" type="cn.bj.domain.Student">
     <!-- 列名和java属性关系-->
        <!--主键列，使用id标签
          column:列名 (数据库中列名)   property:java类型的属性名（java中列名）    -->
        <id column="id" property="id"/>
        <!--非主键列，使用result标签  注意上下顺序 -->
        <result column="email" property="name"/>
        <result column="name" property="name"/>
        <result column="age" property="age"/>
    </resultMap>

    <select id="selectAllResultMap" resultMap="studentMap">
        select id,name,email,age from student
    </select>


    <!--列名和属性名不一样 第一种方法 使用resultMap 记住两者不能同时用-->
    <resultMap id="myStudentMap" type="cn.bj.domain.MyStudent">
        <id column="id" property="myId"/>
        <result column="email" property="myEmail"/>
        <result column="name" property="myName"/>
        <result column="age" property="myAge"/>
    </resultMap>

    <select id="selectMyStudent" resultMap="myStudentMap">
           select id,name,email,age from student
    </select>

    <!--列名和属性名不一样 第二种方法 使用resultType
        resultType默认原则是同名的列值赋给同名的属性，使用列别名
    -->
    <select id="selectMyStudent2" resultType="cn.bj.domain.MyStudent">
           select id as myId,name as myName,email as myEmail,age as myAge from student
    </select>

    <!--第一种 like ，java代码指定 like 的内容-->
    <select id="selectLinkOne" resultType="cn.bj.domain.Student">
         select id,name,email,age from student where name like #{name}
    </select>

    <!--第二种 like ，在mapper文件中拼接like的内容-->
    <select id="selectLinkTwo" resultType="cn.bj.domain.Student">
         select id,name,email,age from student where name like "%" #{name} "%"
    </select>

</mapper>



